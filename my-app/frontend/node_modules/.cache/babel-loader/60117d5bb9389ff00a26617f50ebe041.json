{"ast":null,"code":"var _jsxFileName = \"/Users/nakul.nayak/Documents/GitHub/CalPoly/Hack4Impact/bootcamp-project-2022/bootcamp-project-2022/my-app/frontend/src/components/RecipePage.tsx\",\n  _s = $RefreshSig$();\nimport './RecipePage.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecipePage(props) {\n  _s();\n  const [newIngredient, setNewIngredient] = useState(''); //add this\n  const [allIngredients, setAllIngredients] = useState(props.ingredients);\n  const [newInstruction, setNewInstruction] = useState(''); //add this\n  const [allInstructions, setAllInstructions] = useState(props.instructions);\n  let addIngredient = () => {\n    console.log(\"YELAY\");\n    fetch(`http://localhost:3002/recipe/${props.name}/ingredient`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'PUT',\n      body: JSON.stringify({\n        ingredient: newIngredient\n      })\n    });\n  };\n  let addInstruction = () => {\n    fetch(`http://localhost:3002/recipe/${props.name}/instruction`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'PUT',\n      body: JSON.stringify({\n        instruction: newInstruction\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"food\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"description\",\n      children: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      id: \"ingred\",\n      children: allIngredients.map((ingred, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ingred\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"2 cups of spinach\",\n      value: newIngredient // add newIngredient as the input's value\n      ,\n      onChange: e => {\n        // this event handler updates the value of newIngredient\n        setNewIngredient(e.target.value);\n        console.log(newIngredient);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setAllIngredients([...allIngredients, newIngredient]);\n        addIngredient();\n        console.log(allIngredients);\n      },\n      children: \"Add Ingredient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Procedure\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      id: \"instructions\",\n      children: allInstructions.map((ingred, idx) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ingred\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Voila\",\n      value: newInstruction // add newIngredient as the input's value\n      ,\n      onChange: e => {\n        // this event handler updates the value of newIngredient\n        setNewInstruction(e.target.value);\n        console.log(newInstruction);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setAllInstructions([...allInstructions, newInstruction]);\n        addInstruction();\n        console.log(allInstructions);\n      },\n      children: \"Add Instruction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.image,\n      width: \"300\",\n      height: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this);\n}\n_s(RecipePage, \"YT/HRAlP7tdVJOxmSnTdU9O5l8Q=\");\n_c = RecipePage;\nvar _c;\n$RefreshReg$(_c, \"RecipePage\");","map":{"version":3,"names":["React","useState","RecipePage","props","newIngredient","setNewIngredient","allIngredients","setAllIngredients","ingredients","newInstruction","setNewInstruction","allInstructions","setAllInstructions","instructions","addIngredient","console","log","fetch","name","headers","method","body","JSON","stringify","ingredient","addInstruction","instruction","description","map","ingred","idx","e","target","value","image"],"sources":["/Users/nakul.nayak/Documents/GitHub/CalPoly/Hack4Impact/bootcamp-project-2022/bootcamp-project-2022/my-app/frontend/src/components/RecipePage.tsx"],"sourcesContent":["import './RecipePage.css';\nimport React, { ChangeEvent, useState } from 'react';\nimport { Recipe } from '../recipeData';\n\nexport default function RecipePage(props:Recipe) {\n    const [newIngredient, setNewIngredient] = useState('');//add this\n    const [allIngredients, setAllIngredients] = useState(props.ingredients);\n    const [newInstruction, setNewInstruction] = useState('');//add this\n    const [allInstructions, setAllInstructions] = useState(props.instructions);\n\n    let addIngredient = () => {\n        console.log(\"YELAY\");\n        fetch(`http://localhost:3002/recipe/${props.name}/ingredient`, {\n            headers : { \n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n              },\n            method: 'PUT',\n            body: JSON.stringify({ingredient: newIngredient})\n          });\n    }\n     \n    let addInstruction = () => {\n        fetch(`http://localhost:3002/recipe/${props.name}/instruction`, {\n            headers : { \n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'PUT',\n            body: JSON.stringify({instruction: newInstruction})\n        })\n    }\n\n    return (<div className=\"food\">\n    <h1>{props.name}</h1>\n    <p id=\"description\">{props.description}</p>\n   \n\n    <h2>Ingredients</h2>\n\n    <ol id=\"ingred\">\n        {allIngredients.map((ingred, idx) => {\n                    return <li key={idx}>{ingred}</li>;\n                })}\n    </ol>\n\n    <input\n        placeholder=\"2 cups of spinach\"\n        value={newIngredient} // add newIngredient as the input's value\n        onChange={(e: ChangeEvent<HTMLInputElement>) => {\n            // this event handler updates the value of newIngredient\n            setNewIngredient(e.target.value);\n            console.log(newIngredient);\n        }}/>\n    <button onClick={() => \n        {\n            setAllIngredients([...allIngredients, newIngredient])\n            addIngredient();\n            console.log(allIngredients);\n        }}>\n        Add Ingredient\n    </button>\n\n    <h2>Procedure</h2>\n    <ol id=\"instructions\">\n       {allInstructions.map((ingred, idx) => {\n                    return <li key={idx}>{ingred}</li>;\n                })}\n    </ol>\n\n    <input\n        placeholder=\"Voila\"\n        value={newInstruction} // add newIngredient as the input's value\n        onChange={(e: ChangeEvent<HTMLInputElement>) => {\n            // this event handler updates the value of newIngredient\n            setNewInstruction(e.target.value);\n            console.log(newInstruction);\n        }}/>\n    <button onClick={() => \n        {\n            setAllInstructions([...allInstructions, newInstruction]);\n            addInstruction();\n            console.log(allInstructions);\n        }}>\n        Add Instruction\n    </button>\n\n    <img src={props.image} width=\"300\" height=\"300\" />\n    </div>);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}